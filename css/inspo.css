/* Only supporting browsers that support grid. 
 * To make this nice looking, the images need to be sized the same, either 
 * 'big' that are 2 x 2 or 'small' that are 1 x 1, and all need to be < 100kb.
 * 10 images times 100kb = 1 megabyte. 
*/

html {
    font-size: 1rem;
    line-height: 1.15;
    text-rendering: optimizeLegibility;
    -webkit-font-smoothing: antialiased;
    -webkit-text-size-adjust: 100%; 
}

body {
    background-color: #404040;
    color: #fbfcf7; 
    font-family: 'Open Sans', 'Noto Sans', Candara, sans-serif; 
}

h1 {
    margin: 0;
}

header {
    text-align: center;
    margin-bottom: 1em;
}

a {
    color: inherit;
}

@media screen and (min-width: 800px){
    
    main {
        display: grid;
        grid-gap: .4em;
        grid-template-columns: repeat(8, 1fr);
    }
    
    img {
       max-width: 100%;
       /*max-height: 100%;*/
    }
    /* For some reason Chrome shits itself with max-height, plain width/height 100%
     * work fine (besides stretching the images) BUT the max results in tiny images, 
     * like a dozen pixels wide. Removing it altogether makes them spill out. 
     * OK after testng it looks like it's just max-height. Fortunately just using
     * max-width keeps the images inside their boxes. 
    */

    .tile1 {
        grid-column: 1 / span 4;
        grid-row: 1 / span 4;
    }
    
    .tile2 {
        grid-column: 5 / span 2;
        grid-row: 1 / 3;
    }
    
    .tile3 {
        grid-column: 7 / span 2;
        grid-row: 1 / span 2;
    }
    
    .tile4 {
        grid-column: 5 / span 2;
        grid-row: 3 / span 2;
    }
    
    .tile5 {
        grid-column: 7 / span 2;
        grid-row: 3 / span 2;
    }
    
    .tile6 {
        grid-column: 1 / span 2;
        grid-row: 5 / span 2;
    }
    
    .tile7 {
        grid-column: 3 / span 2;
        grid-row: 5 / span 2;
    }
    
    .tile8 {
        grid-column: 1 / span 2;
        grid-row: 7 / span 2;
    }
    
    .tile9 {
        grid-column: 3 / span 2;
        grid-row: 7 / span 2;
    }
    
    .tile10 {
        grid-column: 5 / span 4;
        grid-row: 5 / span 4;
    }
    
}
