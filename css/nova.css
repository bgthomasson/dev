/* Block level and global elements ------------------------------------------ 
* Not sure why I used RGB but it's not bad. HSL is just a different mindset. 
* Planned on light/dark mode, thus a semantic palette. 
*/

:root {
    --ink: rgb(9, 5, 1);
    --wallpaper: rgb(41, 37, 37);
    --mainpaper: rgb(247, 247, 247);
}

html {
	font-size: 1rem;
    box-sizing: border-box;
}

*,
*::before,
*::after {
    box-sizing: inherit;
}

body {
    background-color: var(--wallpaper);
    color: var(--ink);
    font-family: 'Noto Sans', 'Open Sans', sans-serif;
	line-height: 1.4;
    margin: 0;
}

main {
    background-color: var(--mainpaper);
    padding: 1em;
    width: min(700px, 100%);
    margin-inline: auto;
}

/* ^ Just wanted a simple centered column on desktop and this avoids @media query etc 
* using "display: grid; justify-content: center;" on the body is good but 
* <main> is the only child element I'm using here so testing this out. 
* "margin-inline" is 94% in 2024, so very usable. 
*/

article {
    margin-bottom: 5em;
}

h1 {
    font-size: clamp(2em, 4vw, 4em);
    text-align: center;
    text-wrap: balance; 
}

p {
    font-size: clamp(1em, 1.25vw, 1.3em);
}

img, 
picture, 
svg, 
video {
    display: block;
    max-width: 100%;
}

/* ---------------------------------------------------------------------- */

.grayscale {
    filter: grayscale(1);
}

.foggy {
    filter: blur(3px);
}

.foggy:hover {
    filter: none;
    transition: filter 1s; 
}


/* This always looked awkward using :hover and can't work on mobile anyways so I dropped it.  
 * What use case for this then? 
*/
.flipper {
    display: block;
    transition: transform 1s;
    transform-style: preserve-3d;
}

.info {
    transform: rotateY(180deg);
    backface-visibility: hidden;
    background: rgb(255 255 255 / 0.7);
    /*new style of doing alpha instead of rgba() */
}

.clip1 {
    clip-path: ellipse(25% 45% at 50% 50%);
}


.progresso {
    height: 0.5em;
    position: fixed;
    top: 0;
    z-index: 123;
    background-color: cornflowerblue;
    width: 100%;
    scale: 0 1;
    animation: progresso linear;
    animation-timeline: scroll();
}
@keyframes progresso {
    to {
        scale: 1 1;
    }
}


.fadein {
    animation: fade-in linear;
    animation-timeline: view();
}
@keyframes fade-in {
    from { opacity: .1; }
    to { opacity: 1; }
}



/* Forms -------------------------------------------------------------------- */

fieldset {
    border: 3px solid rgb(176 148 127 / .5);
	margin-bottom: 1em;
}

button,
input,
select,
textarea {
    font: inherit; 
    margin: 0; 
}

button {
    background-color: rgb(190 230 250);
    border: none;
    border-radius: .5em;
    box-shadow: 5px 5px 5px rgb(64 16 0 / .4);
    cursor: pointer;
    font-weight: 700;
    padding: .5em;
    transition: all 0.1s;
}

button:hover {
    background-color: rgb(105 210 231);
    box-shadow: 5px 5px 5px rgb(64 16 0 / .8);
}

button:active {
	background-color: rgb(105 210 231);
	box-shadow:  0 1px 0 rgb(64 16 0);
	transform: translateY(3px);
}

input[type=range]{
    background-color: rgb(190 230 250 / .5);
}

input:focus {
    background-color: rgb(190 230 250 / .5);
    outline: none;
}

/* Default is inline-block, which makes a mess if you want a button UNDER it 
 * Setting it to display:block is much simpler than trying to wrap everything  
 * in the form with divs, or setting them all to display:list-item, lol. 
*/

textarea {
    display: block;
    margin-bottom: 1em;
}
